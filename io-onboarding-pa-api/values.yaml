---

global:
  registry: ''

ioOnboardingPaApi:

  replicaCount: 1

  images:
    backend:
      repository: teamdigitale/io-onboarding-pa-api
      tag: latest
      pullPolicy: Always
    postgresDb:
      repository: postgres
      tag: 12-alpine
      pullPolicy: IfNotPresent

  backend:
    host: backend

  postgresDb:
    host: postgres-db
    database: io-onboarding-pa-api
    user: io-onboarding-pa-api

  env:
    api_base_path: /api/v1
    client_spid_error_redirection_url: /error.html
    client_spid_login_redirection_url: https://pa-onboarding.dev.io.italia.it
    client_spid_success_redirection_url: https://pa-onboarding.dev.io.italia.it/dashboard
    saml_accepted_clock_skew_ms: "-1"
    saml_attribute_consuming_service_index: "0"
    saml_callback_url: "https://api.pa-onboarding.dev.io.italia.it/assertion-consumer-service"
    saml_issuer: "https://spid.agid.gov.it/cd"
    spid_autologin: ""
    spid_testenv_url: "https://spid-testenv.dev.io.italia.it"
    idp_metadata_url: "https://registry.spid.gov.it/metadata/idp/spid-entities-idps.xml"
    saml_cert_path: "/usr/src/app/certs/cert.pem"
    saml_key_path: "/usr/src/app/certs/key.pem"
    token_duration_in_seconds: "3600" #1 hour

  spidCert:
    secretName: "spid-cert"
    mountPath: "/usr/src/app/certs"
    readOnly: true

  services:
    backendHttp:
      port: 3000
    postgresDb:
      port: 5432

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      ingress.kubernetes.io/ssl-redirect: "true"
      kubernetes.io/tls-acme: "true"
      certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
    path: /
    hosts:
      - api.pa-onboarding.dev.io.italia.it
    tls:
      - hosts:
          - api.pa-onboarding.dev.io.italia.it
        secretName: io-onboarding-pa-api-dev-tls

  resources:
    # For each of the following objects, set limits
    # removing the curly brackets after resources and
    # uncommenting the lines below.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
    backend: {}
    postgresDb: {}

  nodeSelector: {}

  tolerations: {}

  affinity: {}
