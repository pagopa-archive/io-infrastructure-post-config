---

global:
  registry: ''

pagopaProxy:

  replicaCount: 1

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 1

  revisionHistoryLimit: 10

  images:
    pagopaProxy:
      repository: docker.io/teamdigitale/italia-pagopa-proxy
      tag: v0.10.0
      pullPolicy: IfNotPresent
    pagopaProxyNginxTls:
      repository: docker.io/nginx
      tag: 1.17.3-alpine
      pullPolicy: IfNotPresent

  env:
    winston_log_level: "debug"
    pagopaproxy_host: "localhost"
    pagopaproxy_port: "8080"
    pagopa_ws_uri: "/openspcoop2/proxy/PA/PROXYPagamentiTelematiciPspNodo"
    pagopa_timeout_msec: "500000"
    redis_db_url: "io-dev-redis-cache-01.redis.cache.windows.net"
    redis_db_port: "6380"
    redis_use_cluster: true
    pagopa_proxy_nginx_tls_server_name: "pagopa"
    pagopa_host: "https://gad.test.pagopa.gov.it/"

  secrets:
    azureKeyvaultName: io-dev-keyvault
    kubernetesIoCertSecretName: pagopa-proxy-test-io-certs
    kubernetesPagopaCaChainCertsSecretName: pagopa-proxy-test-pagopa-ca-chain-certs
    kubernetesSecretName: pagopa-proxy-test-secrets
    azureSecretNamePrefix: k8s-pagopa-proxy-test-secrets
    azureSecretNameSuffixes:
      - pagopa-password
      - pagopa-id-psp
      - pagopa-id-int-psp
      - pagopa-id-canale
      - pagopa-id-canale-pagamento
      - redis-db-password

  services:
    pagopaProxy:
      httpPort:
        servicePort: 80
        containerPort: 8080
    pagopaProxyNginxTls:
      httpPort:
        servicePort: 80
        containerPort: 80

  configs:
    pagopaProxyNginxTls:
      nginxConfig:
        volumeMountSettings:
          mountPath: "/etc/nginx/conf.d/tmp"
          readOnly: true
        data: |
          server {
            listen 80;

            server_name ${SERVER_NAME};

            location / {
              proxy_pass                    ${PAGOPA_HOST};
              proxy_set_header              Content-Type text/xml;

              proxy_ssl_certificate         /etc/nginx/io_certs/tls.crt;
              proxy_ssl_certificate_key     /etc/nginx/io_certs/tls.key;
              proxy_ssl_protocols           TLSv1.2;
              proxy_ssl_trusted_certificate /etc/nginx/pagopa_ca_certs/ca.crt;
              proxy_ssl_verify              on;
              proxy_ssl_verify_depth        2;
              proxy_ssl_session_reuse       on;
            }
          }
      pagopaCaCertsConfig:
        volumeMountSettings:
          secretName: pagopa-proxy-test-pagopa-ca-chain-certs
          mountPath: "/etc/nginx/pagopa_ca_certs"
          readOnly: true
      ioCertsConfig:
        volumeMountSettings:
          secretName: pagopa-proxy-test-io-certs
          mountPath: "/etc/nginx/io_certs"
          readOnly: true

  livenessProbe:
    pagopaProxy:
      httpGet:
        path: "/ping"
        port: 8080
      initialDelaySeconds: 30
      timeoutSeconds: 5
      periodSeconds: 10
      failureThreshold: 5

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      # Force HTTPs
      ingress.kubernetes.io/ssl-redirect: "true"
      # Enable client certificate authentication
      nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
      # Validate both the client certificate and the intermediate certificate
      nginx.ingress.kubernetes.io/auth-tls-verify-depth: "2"
      # The secret containing the trusted ca certificates
      nginx.ingress.kubernetes.io/auth-tls-secret: "default/pagopa-proxy-test-pagopa-ca-chain-certs"
    path: /
    hosts:
      - pagopa-test.dev.io.italia.it
    tls:
      - hosts:
          - pagopa-test.dev.io.italia.it
        secretName: pagopa-proxy-test-io-certs

  resources:
    limits:
     cpu: 100m
     memory: 128Mi
    requests:
     cpu: 100m
     memory: 128Mi

  nodeSelector: {}

  tolerations: {}

  affinity: {}
